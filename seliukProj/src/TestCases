Test case ID: TS_SP_01

	Summary: Sign up for the website - happy path

	Preconditions:
		- The user's login must be unique
		- The user's login must match the regex pattern ^[a-zA-Z0-9]{3,30}$
		- The user's email address must be unique
		- The user's email address has to match the regex pattern ^[a-zA-Z0-9-_]{1,20}@[a-zA-Z0-9]{1,10}\.[a-zA-Z]{3}$
		- The user's password must match the regex pattern ^[\S]{12,50}$

	Steps to reproduce:
		1. Entering a user name in the user registration block
			Locator: startPage.register.userName
			Value: "user0001"
		2. Entering an email in the user registration block
			Locator: startPage.register.email
			Value: "user0001@mail.com"
		3. Entering a password in the user registration block
			Locator: startPage.register.password
			Value: user0001_Pass
		4. Clicking on the "Sign up for OurApp" button
			Locator: startPage.register.submitButto

	Expected results:
		- We can see the "Sign Out" button on the page
			Locator: homePage.buttons.logOut
		- We can see the "Create Post" button on the page
			Locator: homePage.buttons.createNewPost
		- We do not find the "Sign In" button on the page
			Locator: startPage.signIn.submitButton

	Postconditions:
		- Log Out from the page
			Locator: homePage.buttons.logOut



Test case ID: TS_SP_02

	Summary: Log in to the site as an existing user

	Preconditions:
		- The user must already be registered
		- If the user is not registered, he must be registered - run TS_SP_01
		- The user's login must match the regex pattern ^[a-zA-Z0-9]{3,30}$
		- The user's password must match the regex pattern ^[\S]{12,50}$

	Steps to reproduce:
		1. Entering a username in the user authorization block
			Locator: startPage.signIn.userName
			Value: "user0001"
		2. Entering a password in the user authorization block
			Locator: startPage.signIn.password
			Value: "user0001_Pass"
		3. Clicking on the "Sign In" button
			Locator: startPage.signIn.submitButton
		4. Optional: If we see the message "Invalid username/password" the page: run TS_SP_01, and repeat paragraph 1-3

	Expected results:
		- We can see the "Sign Out" button on the page
			Locator: homePage.buttons.logOut
		- We can see the "Create Post" button on the page
			Locator: homePage.buttons.createNewPost
		- We do not find the "Sign In" button on the page
		Locator: startPage.signIn.submitButton

	Postconditions:
		- Log Out from the page.
			Locator: homePage.buttons.logOut



Test case ID: TS_PP_03

	Summary: Creating a new post

	Preconditions:
		- The user must be logged in - run TS_SP_02
		- If the user is not registered, he must be registered - run TS_SP_01

	Steps to reproduce:
		1. Clicking on the "Create Post" button
			Locator: homePage.buttons.createNewPost
		2. Entering text in the post title
			Locator: postPage.inputForms.title
			Value: "What is test automation and why is it important?"
		3. Entering text in the post body
			Locator: postPage.inputForms.body
			Value: "Automation testing is the application of tools and technology to testing software with the goal of reducing testing efforts, delivering capability faster and more affordably. It helps in building better quality software with less effort."
		4. Clicking on the button "Save new post".
			Locator: postPage.buttons.savePost

	Expected results:
		- We can see the message "New post successfully created."
			Locator: postPage.notification.newPostCreate
		- We can see the delete post button on the page
			Locator: postPage.buttons.deletePost
		- We do not find the "Sign In" button on the page
			Locator: startPage.signIn.submitButton

Postconditions:
- Delete a created post.
	Locator: postPage.buttons.deletePost
- Log Out from the page.
	Locator: homePage.buttons.logOut



Test case ID: TS_PP_04

	Summary: Editing an existing post

	Preconditions:
		- The user must be logged in - run TS_SP_02
		- If the user is not registered, he must be registered - run TS_SP_01
		- The new post must be created - if not, run TS_PP_03

	Steps to reproduce:
		1. Moving to MyProfile page.
			Locator: homePage.buttons.myProfileButton
		2. Moving to the page of the created post
			Locator: myProfilePage.posts.findPost
		3. Clicking in the edit post button
			Locator: postPage.buttons.editPost
		4. Adding text to the body of a post
			Locator: postPage.inputForms.body
			Value: "Many companies are already using automation testing to a certain extent, but still largely depend on manual tests because they donâ€™t know how to properly leverage the benefits of automated testing in their development process."
		5. Clicking in the "Save updates" button
			Locator: postPage.buttons.savePost

	Expected results:
		- We can see the message "Post successfully updated."
			Locator: postPage.notification.newPostCreated
		- We can see the delete post button on the page
			Locator: postPage.buttons.deletePost
		- We do not find the "Sign In" button on the page
			Locator: startPage.signIn.submitButton

	Postconditions:
		- Back to the post permalink
			Locator: postPage.buttons.backToPostPermalink
		- Delete the editted post
			Locator: postPage.buttons.deletePost
		- Log Out from the page.
			Locator: homePage.buttons.logOut



Test case ID: TS_SS_05

	Summary: Subscription to a user

	Preconditions:
		1. Creating or Logging In by User1: run TS_SP_01 or TS_SP_02 with values:
			- login: user0001
			- email: user0001@mail.com
			- user password: user0001_Pass
		2. Creating a new post by User1: run TS_PP_03
		3. Log Out by User1
		4. Creating User2: run TS_SP_01 with values:
			- login: user0002
			- email: user0002@mail.com
			- user password: user0002_Pass

	Steps to reproduce:
		1. Click on the search button.
			Locator: homePage.buttons.searchButton
		2. Type the title of the post created by the User1
			Locator: homePage.inputForms.searchField
			Value: "What is test automation and why is it important?"
		3. Selecting the post we were looking for
			Locator: myProfilePage.posts.findPost = .//a[@class="list-group-item list-group-item-action"]//strong[contains(text(),"What is test automation and why is it important?")]
		4. Clicking on the user1 avatar button
			Locator: postPage.buttons.userAvatarButton
		5. Clicking on the "Follow" button
			Locator: postPage.buttons.followUserButton

	Expected results:
		- We can see the "Unfollow" button on the page
			Locator: postPage.buttons.unfollowUser.Button
		- We can see the "Create Post" button on the page
			Locator: homePage.buttons.createNewPost
		- We do not find the "Sign In" button on the page
			Locator: startPage.signIn.submitButton

	Postconditions:
		- Clicking on the "Unfollow" button on the page.
			Locator: postPage.buttons.unfollowUser.Button
		- Log Out from the page.
			Locator: homePage.buttons.logOut
		- Log In by the User1:
			- Locator: startPage.signIn.userName
			- Locator: startPage.signIn.password
			- Locator: startPage.signIn.submitButton
		- Moving to MyProfile page.
			Locator: homePage.buttons.myProfileButton
		- Moving to the page of the created post.
			Locator: myProfilePage.posts.findPost
		- Delete a created post.
			Locator: postPage.buttons.deletePost
		- Log Out from the page.
			Locator: homePage.buttons.logOut